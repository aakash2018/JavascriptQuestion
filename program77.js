// üëâ slice()

// Definition:

// slice(start, end) array ‡§ï‡§æ ‡§è‡§ï ‡§π‡§ø‡§∏‡•ç‡§∏‡§æ copy ‡§ï‡§∞‡§ï‡•á ‡§®‡§Ø‡§æ array return ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

// ‡§Ø‡§π original array ‡§ï‡•ã modify ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞‡§§‡§æ‡•§

// end exclusive ‡§π‡•ã‡§§‡§æ ‡§π‡•à (‡§Ø‡§æ‡§®‡§ø end index ‡§µ‡§æ‡§≤‡§æ element include ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã‡§ó‡§æ)‡•§

// Polyfill Code:

Array.prototype.mySlice = function (start = 0, end = this.length) {
  let result = [];

  // Negative index handle (‡§ú‡•à‡§∏‡•á slice(-2))
  if (start < 0) start = this.length + start;
  if (end < 0) end = this.length + end;

  for (let i = start; i < end && i < this.length; i++) {
    result.push(this[i]);
  }
  return result;
};


// Example:

let arr = [1, 2, 3, 4, 5];
console.log(arr.mySlice(1, 3)); // [2, 3]
console.log(arr.mySlice(-2));   // [4, 5]
console.log(arr);               // [1, 2, 3, 4, 5] (original same)

// üëâ splice()

// Definition:

// splice(start, deleteCount, ...items)

// Array ‡§ï‡•ã modify ‡§ï‡§∞‡§§‡§æ ‡§π‡•à (in place)‡•§

// start ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§ï‡•á deleteCount elements ‡§π‡§ü‡§æ‡§§‡§æ ‡§π‡•à ‡§î‡§∞ optionally ‡§®‡§è elements insert ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

// ‡§π‡§ü‡§æ‡§è ‡§ó‡§è elements ‡§ï‡§æ array return ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§

// Polyfill Code:

Array.prototype.mySplice = function (start, deleteCount, ...items) {
  let removed = [];

  // Negative start handle
  if (start < 0) start = this.length + start;
  if (start < 0) start = 0;

  // delete elements collect
  for (let i = 0; i < deleteCount; i++) {
    if (start < this.length) {
      removed.push(this[start]);
      this[start] = this[start + 1]; // shift ‡§π‡•ã‡§ó‡§æ ‡§®‡•Ä‡§ö‡•á handle
      start++;
    }
  }

  // Delete + Insert logic
  let leftPart = this.slice(0, start - deleteCount);
  let rightPart = this.slice(start);

  let newArr = [...leftPart, ...items, ...rightPart];

  // Original array ‡§ï‡•ã modify ‡§ï‡§∞‡§®‡§æ
  this.length = 0;
  for (let i = 0; i < newArr.length; i++) {
    this[i] = newArr[i];
  }

  return removed;
};


// Example:

let arr1 = [1, 2, 3, 4, 5];

// remove 2 elements from index 1 and insert 9, 10
let removed = arr1.mySplice(1, 2, 9, 10);

console.log(removed); // [2, 3]
console.log(arr1);     // [1, 9, 10, 4, 5]