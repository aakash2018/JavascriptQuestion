// 2. Polyfill for Array.prototype.filter()
// ЁЯСЙ Definition

// filter() array рдХреЗ рд╣рд░ element рдкрд░ callback рдЪрд▓рд╛рддрд╛ рд╣реИ рдФрд░ рд╕рд┐рд░реНрдл рд╡рд╣реА elements return рдХрд░рддрд╛ рд╣реИ рдЬреЛ condition рдкрд╛рд╕ рдХрд░рддреЗ рд╣реИрдВред

// Original array modify рдирд╣реАрдВ рд╣реЛрддрд╛ред

// Return рд╣рдореЗрд╢рд╛ new array рд╣реЛрддрд╛ рд╣реИред

// ЁЯСЙ Polyfill Code
Array.prototype.myFilter = function (callback) {
  let result = [];

  for (let i = 0; i < this.length; i++) {
    // рдЕрдЧрд░ callback true return рдХрд░реЗ тЖТ element add рд╣реЛрдЧрд╛
    if (callback(this[i], i, this)) {
      result.push(this[i]);
    }
  }

  return result;
};

// ЁЯСЙ Example
let arr = [10, 25, 30, 45, 50];

let filteredArr = arr.myFilter((num) => num > 25);

console.log(filteredArr); // [30, 45, 50]
console.log(arr);         // [10, 25, 30, 45, 50] (original same hai)

// ЁЯСЙ Key Points

// Condition pass рдХрд░рдиреЗ рд╡рд╛рд▓реЗ elements new array рдореЗрдВ рдЖрддреЗ рд╣реИрдВ тЬЕ

// Original array рдХрднреА change рдирд╣реАрдВ рд╣реЛрддрд╛ тЬЕ