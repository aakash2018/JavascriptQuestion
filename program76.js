// Polyfill for Array.prototype.push() and Array.prototype.pop()
// ðŸ‘‰ push()

// Definition:
// push() à¤•à¤¿à¤¸à¥€ array à¤•à¥‡ end à¤®à¥‡à¤‚ à¤¨à¤¯à¤¾ element add à¤•à¤°à¤¤à¤¾ à¤¹à¥ˆ à¤”à¤° à¤¨à¤¯à¤¾ length return à¤•à¤°à¤¤à¤¾ à¤¹à¥ˆà¥¤

// Polyfill Code:

Array.prototype.myPush = function (...args) {
  for (let i = 0; i < args.length; i++) {
    this[this.length] = args[i]; // end à¤®à¥‡à¤‚ add
  }
  return this.length; // à¤¨à¤¯à¤¾ length return
};


// Example:

let arr = [1, 2, 3];
arr.myPush(4, 5);

console.log(arr); // [1, 2, 3, 4, 5]

// ðŸ‘‰ pop()

// Definition:
// pop() array à¤•à¥‡ last element à¤•à¥‹ remove à¤•à¤°à¤¤à¤¾ à¤¹à¥ˆ à¤”à¤° à¤µà¤¹à¥€ element return à¤•à¤°à¤¤à¤¾ à¤¹à¥ˆà¥¤

// Polyfill Code:

Array.prototype.myPop = function () {
  if (this.length === 0) return undefined; // empty array

  const lastElement = this[this.length - 1];
  this.length = this.length - 1; // last element à¤¹à¤Ÿ à¤—à¤¯à¤¾
  return lastElement;
};


// Example:

let arr1 = [10, 20, 30];
let removed = arr1.myPop();

console.log(removed); // 30
console.log(arr1);     // [10, 20]

